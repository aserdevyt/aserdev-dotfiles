#!/usr/bin/env bash
# aserdev's improved Arch dotfile installer â€” merges configs safely ðŸ’€
set -euo pipefail
IFS=$'\n\t'

WORKSPACE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
HOME_DIR="${HOME:-/root}"
SILENT=0

# Packages list
PKGS=(
  htop btop hyprland hyprpaper grimblast hyprpicker waybar rofi-wayland rofi-emoji swaync waypaper
  xdg-desktop-portal-hyprland kitty thunar pluma qt5ct qt6ct cmake cpio glaze hyprland-protocols
  uwsm grimblast-git libnotify hyprpicker wl-clipboard otf-font-awesome xsel xclip gvfs slurp grim
  zsh imagemagick python-pygments libcanberra catfish gvfs tumbler thunar-volman
  thunar-archive-plugin thunar-media-tags-plugin ffmpegthumbnailer poppler-glib yt-dlp ffmpeg
  libgsf nvim vi vim nano less git curl wget aria2 microsoft-edge-stable libgepub libopenraw
  freetype2 plocate zeitgeist python-requests file-roller unzip unrar discord pipewire
  pipewire-alsa pipewire-jack pipewire-pulse pipewire-v4l2 gst-plugin-pipewire wireplumber
  pavucontrol pamixer pulsemixer paprefs networkmanager network-manager-applet nm-connection-editor
  libnm networkmanager-openvpn networkmanager-pptp networkmanager-vpnc networkmanager-openconnect
  networkmanager-l2tp networkmanager-strongswan cliphist bat yay wlogout ttf-jetbrains-mono-nerd
  fcitx5 fcitx5-configtool fcitx5-qt fcitx5-gtk fcitx5-mozc fastfetch dracula-gtk-theme
  colloid-icon-theme noto-fonts-emoji ttf-iosevka-nerd pavucontrol vlc vlc-plugins-all fzf bat
)

# Files/dirs to skip copying from workspace
SKIP_BASENAMES=( ".git" ".gitignore" ".DS_Store" "install" )

log()   { printf '%s\n' "$*"; }
debug() { log "[DEBUG] $*"; }
info()  { log "[INFO]  $*"; }
err()   { log "[ERROR] $*" >&2; }

ask_yes_no() {
  local prompt="${1:-Continue? [y/N]: }"
  if [[ $SILENT -eq 1 ]]; then
    return 1
  fi
  read -r -p "$prompt" ans
  [[ "$ans" =~ ^[Yy]$ ]]
}

check_internet() {
  debug "Checking internet connectivity..."
  if ping -c 1 -W 2 archlinux.org &>/dev/null; then
    debug "Internet OK."
  else
    err "No internet connection detected. Exiting."
    exit 1
  fi
}

ensure_yay() {
  if ! command -v yay &>/dev/null; then
    info "yay not found. Installing..."
    sudo pacman -S --noconfirm --needed git base-devel
    tmpdir="$(mktemp -d)"
    git clone https://aur.archlinux.org/yay.git "$tmpdir"
    pushd "$tmpdir" >/dev/null
    makepkg -si --noconfirm
    popd >/dev/null
    rm -rf "$tmpdir"
  else
    debug "yay is already installed."
  fi
}

install_packages() {
  info "Installing packages with yay..."
  yay -Syu --noconfirm --needed "${PKGS[@]}"
}

install_gdm() {
  if ! pacman -Qi gdm &>/dev/null; then
    info "Installing GDM..."
    sudo pacman -S --noconfirm gdm
  else
    debug "GDM already installed."
  fi
  info "Enabling GDM..."
  sudo systemctl enable gdm
}

enable_services() {
  info "Checking and enabling essential services (system-wide)..."

  # --- NetworkManager check ---
  if ! systemctl is-active --quiet NetworkManager; then
    info "NetworkManager not running, enabling it globally..."
    sudo systemctl enable --now NetworkManager.service
  else
    debug "NetworkManager is active âœ…"
  fi

  # --- PipeWire check ---
  if ! systemctl --user is-active --quiet pipewire 2>/dev/null; then
    info "PipeWire not running for current user, enabling global user services..."
    sudo systemctl enable --global pipewire.service pipewire-pulse.service wireplumber.service
    info "Enabled PipeWire globally (for all users)"
  else
    debug "PipeWire already active âœ…"
  fi
}


copy_workspace() {
  if ! command -v rsync &>/dev/null; then
    echo "[DEBUG] rsync not found. Installing..."
    sudo pacman -S --noconfirm rsync
  fi

  debug "Merging files from workspace: $WORKSPACE_DIR â†’ $HOME_DIR"
  shopt -s nullglob dotglob
  local items=( "$WORKSPACE_DIR"/* )
  shopt -u dotglob

  for ITEM in "${items[@]}"; do
    local BASENAME TARGET
    BASENAME="$(basename "$ITEM")"
    TARGET="$HOME_DIR/$BASENAME"

    for skip in "${SKIP_BASENAMES[@]}"; do
      [[ "$BASENAME" == "$skip" ]] && { debug "Skipping $BASENAME"; continue 2; }
    done

    debug "Processing $BASENAME â†’ $TARGET"

    if [[ -d "$ITEM" && ! -L "$ITEM" ]]; then
      debug "Merging directory $BASENAME"
      mkdir -p "$TARGET"
      rsync -a --info=NAME --omit-dir-times -- "$ITEM"/ "$TARGET"/
      info "Merged $BASENAME âœ…"
    else
      if [[ -e "$TARGET" ]]; then
        if [[ $SILENT -eq 0 ]]; then
          ask_yes_no "Replace $TARGET? [y/N]: " || { debug "Skipped $BASENAME"; continue; }
        fi
      fi
      cp -a -- "$ITEM" "$TARGET"
      info "Installed $BASENAME âœ…"
    fi
  done
}

# ---------- main ----------
if [[ "${1:-}" == "--silent" ]]; then
  SILENT=1
fi

debug "Starting dotfile install..."
check_internet
ensure_yay
install_packages
install_gdm
enable_services
copy_workspace
chsh -s /usr/bin/zsh

info "âœ… All done! Merged configs, installed packages, enabled GDM, and made sure PipeWire + NetworkManager are running."

